#
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 8080 default_server;
	listen [::]:8080 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	#
	#	# With php5-cgi alone:
		fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
		include fastcgi_params;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 8081;
#	#listen [::]:8081;
#
#	server_name test.betaproxyadmin.oneroster.com;
#
#	root /var/www/html/proxyadmin_nginx;
#	index index.html index.php;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

############# Custom virtual hosts ##############################################################

server {
        listen 8080;
        #listen [::]:8080;

        server_name betaproxyadmin.oneroster.com;

        root /var/www/html/proxyadmin_nginx;
        index index.html index.php;

        location / {
                try_files $uri $uri/ =404;
        }
}


server {
	listen  8080;
	server_name test.betaproxyadmin.oneroster.com;
	include /etc/nginx/default.d/*.conf;
	location / {
		root   /usr/share/nginx/html;
		index index.php  index.html index.htm;
		auth_basic ".htpassword authorization - closed site";
		auth_basic_user_file /etc/nginx/conf.d/configs/.htpasswd;
		##auth_basic_user_file http://localhost/auth/index.php;
		##proxy_set_header Authorization "Basic dGVzdDp0ZXN0=";

		##proxy_pass   http://localhost;
		proxy_pass   http://php.net;
	}
}

server {
        listen  8080;
        server_name gws.betaproxyadmin.oneroster.com;
        include /etc/nginx/default.d/*.conf;
	##auth_http http://localhost/auth;
        location / {
		##auth_http http://localhost/auth/;
		auth_request /check;
                root   /usr/share/nginx/html;
                index index.php  index.html index.htm;
                ##auth_basic "closed site";
                ##auth_basic_user_file /etc/nginx/conf.d/configs/.htpasswd;
                #proxy_pass   http://php.net/;
		#proxy_pass http://192.168.0.33/TimeTracker/desktopdefault.aspx?ReturnUrl=%2fTimeTracker%2fdefault.aspx;
		proxy_pass http://localhost:8080/phpmyadmin/;
        }
	keepalive_requests 50;
	#keepalive_timeout 600;
	error_page 403 = @error403;
	location @error403 {
		return 404;
		#retunr 404  http://betaproxyadmin.oneroster.com;
	}
	location = /check {
		internal;
		proxy_pass http://localhost:80/auth/?tenant_id=2;
		proxy_pass_request_body off;
		proxy_set_header Content-length "";
		proxy_set_header X-Original-URI $request_uri;
		##proxy_set_header Query-String $args;
		if ($http_cookie ~* "shopware_sso_token=([^;]+)(?:;|$)") {
			set $token "$1";			
		}
		proxy_set_header X-SHOPWARE-SSO-Token $token;
	}
}

server {
        listen  8080;
        server_name sso.betaproxyadmin.oneroster.com;
	set $shiv "shiv variable value";
        location / {
                auth_request /check;
		##auth_request_set $user $upstream_http_x_user;
		auth_request_set $user $upstream_http_Set_Cookie;
		proxy_set_header x-user $user;
		
		auth_request_set $gws $upstream_http_gwstoken;
		proxy_set_header x-gwstoken $gws;
		
		add_header X-data-gwstoken $gws;

		#header_filter_by_lua '
		#	local cookies = ngx.header.set_cookie
		#	if not cookies then return end
		#	local newcookies = {}
		#	for i, val in ipairs(cookies) do
		#		local newval = string.gsub(val, "([dD]omain)=[%w_-\\\\.]+", "%1=oneroster.com")
		#		table.insert(newcookies, newval)
		#	end
		#	ngx.header.set_cookie = newcookies
		#';
		
		#add_header X-debug-message $shiv;
		add_header X-data-message "http cookie = $http_cookie, upstream = $upstream_http_Set_Cookie = $http_cookie";
		#proxy_pass_header Set-Cookie;
		#add_header Cookie "SKS-$gws";

		proxy_pass_header Cookie;
		proxy_pass_header Set-Cookie;
		proxy_pass_header P3P;

		##proxy_set_header Set-Cookie "$http_cookie;KEY=VALUE";

		proxy_pass http://localhost:8080/phpmyadmin/;
		##proxy_pass http://nginx.org/;
        }

        error_page 403 = @error403;
        location @error403 {
                return 404;
        }
        location = /check {
                internal;
                proxy_pass http://localhost:80/auth/?tenant_id=2;

                proxy_pass_request_body off;

                proxy_set_header Content-length "";
		proxy_set_header X-Original-URI $request_uri;
		proxy_set_header Host $http_host;
		##proxy_set_header X-Real-IP $remote_addr;
		##proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		##proxy_set_header X-Forwarded-Proto $scheme;

		##add_header X-debug-auth "/check auth";
		set $token "Shiv default token";
		if ($http_cookie ~* "x-gwstoken=([^;]+)(?:;|$)") {
			set $token "$1";
		}
		proxy_set_header x-shiv $http_cookie;
                proxy_set_header X-gwstoken $token;
		#proxy_set_header X-Shiv-Token $http_cookie;
        }
}
